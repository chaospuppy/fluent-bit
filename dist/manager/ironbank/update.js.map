{"version":3,"file":"update.js","sourceRoot":"","sources":["../../../lib/manager/ironbank/update.ts"],"names":[],"mappings":"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","sourcesContent":["import { fromStream } from 'hasha';\nimport { logger } from '../../logger';\nimport { Http } from '../../util/http';\nimport { UpdateDependencyConfig } from '../common';\nimport { parse as _parse } from 'url';\nimport path from 'path';\n\nconst http = new Http('ironbank');\n\nasync function getHashFromFile(url: string, filename: string) : Promise<string | null> {\n  logger.debug(\"getHashFromFile: \" + url + \" \" + filename);\n  try {\n    const result = await http.get(url);\n    if (result.body) {\n      const regex = '(?<hash>[A-Fa-f0-9]{64})\\\\s+' + filename.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      const groups = result.body.match(regex).groups;\n      if (groups) {\n        return groups.hash;\n      }\n    }\n    return null;\n  } catch (err) /* istanbul ignore next */ {\n    return null;\n  }\n}\n\nasync function getHashFromUrl(url: string): Promise<string | null> {\n  try {\n    const parsedUrl = _parse(url);\n    const filename = path.basename(parsedUrl.pathname);\n\n    let hash;\n    hash = await getHashFromFile(filename + '.sha256', filename);\n    if (hash) {\n      return hash;\n    }\n    hash = await getHashFromFile(url.replace(filename, 'SHA256SUMS'), filename);\n    if (hash) {\n      return hash;\n    }\n    hash = await fromStream(http.stream(url), {\n      algorithm: 'sha256',\n    });\n    return hash;\n  } catch (err) /* istanbul ignore next */ {\n    return null;\n  }\n}\n\nexport async function updateDependency({\n  fileContent,\n  upgrade,\n}: UpdateDependencyConfig): Promise<string | null> {\n\n  if (upgrade.depType === 'ironbank-docker') {\n    const oldTag = upgrade.lookupName + ':' + upgrade.currentValue;\n    const newTag = upgrade.lookupName + ':' + upgrade.newValue;\n    let newContent = fileContent.replace(upgrade.currentDigest, upgrade.newDigest);\n    return newContent.replace(oldTag, newTag);\n  } else if (\n    upgrade.depType === 'ironbank-github' &&\n    upgrade.currentValue &&\n    upgrade.newValue\n  ) {\n    const currentValue = upgrade.currentValue.replace(/^v/, '');\n    const newValue = upgrade.newValue.replace(/^v/, '');\n    const oldUrl = upgrade.managerData.item.url;\n    const newUrl = oldUrl.replace(new RegExp(currentValue, 'g'), newValue);\n    const hash = await getHashFromUrl(newUrl);\n    let newContent = fileContent;\n    if (hash) {\n      newContent = newContent.replace(upgrade.managerData.item.validation.value, hash);\n    }\n    return newContent.replace(oldUrl, newUrl);\n  }\n\n  return null;\n}\n"]}