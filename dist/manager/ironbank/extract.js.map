{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/ironbank/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport { parse as _parse } from 'url';\nimport yaml from 'js-yaml';\nimport { logger } from '../../logger';\nimport { PackageDependency, PackageFile } from '../common';\nimport * as datasourceDocker from '../../datasource/docker';\nimport * as datasourceGithubReleases from '../../datasource/github-releases';\nimport * as dockerVersioning from '../../versioning/docker';\n\ninterface UrlParsedResult {\n  repo: string;\n  currentValue: string;\n}\n\nfunction parseUrl(urlString: string): UrlParsedResult | null {\n  // istanbul ignore if\n  if (!urlString) {\n    return null;\n  }\n  const url = _parse(urlString);\n  if (url.host !== 'github.com') {\n    return null;\n  }\n  const path = url.path.split('/').slice(1);\n  const repo = path[0] + '/' + path[1];\n  let currentValue: string = null;\n  if (path[2] === 'releases' && path[3] === 'download') {\n    currentValue = path[4];\n  }\n  if (path[2] === 'archive') {\n    currentValue = path[3].replace(/\\.tar\\.gz$/, '');\n  }\n  if (currentValue) {\n    return { repo, currentValue };\n  }\n  // istanbul ignore next\n  return null;\n}\n\nexport function extractPackageFile(content: string): PackageFile {\n  const deps: PackageDependency[] = [];\n  let download;\n\n  try {\n    download = yaml.safeLoad(content, { json: true });\n  } catch (err) {\n    logger.debug('Failed to parse download.yaml');\n    return null;\n  }\n\n  if (!(download && is.array(download.resources))) {\n    logger.debug('download.yaml has no dependencies');\n    return null;\n  }\n\n  for (const item of download.resources) {\n    const dep: PackageDependency = { managerData: { item } };\n    if (item.url) {\n      // docker\n      if (item.url.startsWith('docker://')) {\n        const [currentDepTag, currentDigest] = item.url.split('@');\n        const [lookupName, currentValue] = item.tag.split(':');\n        dep.depType = 'ironbank-docker';\n        dep.depName = lookupName;\n        dep.datasource = datasourceDocker.id;\n        dep.versioning = dockerVersioning.id;\n        dep.lookupName = lookupName;\n        dep.currentDigest = currentDigest;\n        dep.currentValue = currentValue;\n        deps.push(dep);\n      }\n      // github-releases\n      else if (item.url.includes('github.com')) {\n        const parsedUrl = parseUrl(item.url);\n        dep.depType = 'ironbank-github';\n        dep.depName = parsedUrl.repo;\n        dep.repo = parsedUrl.repo;\n        dep.currentValue = parsedUrl.currentValue;\n        dep.datasource = datasourceGithubReleases.id;\n        dep.lookupName = dep.repo;\n        deps.push(dep);\n      }\n    }\n  }\n\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}